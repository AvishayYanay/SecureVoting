version: '3.4'

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 30
    # volumes:
    # - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  avote1:
    command: ["1"]
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ./src/tallier
      dockerfile: Dockerfile
    secrets:
      - avote_ca.crt
      - source: avote1_key.pem
        target: certfile.pem
    environment:
      TALLIERS_INTERNAL: ${TALLIERS_INTERNAL}
    ports:
      - "18080:18080"
      - "8080:8080"

  avote2:
    command: ["2"]
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ./src/tallier
      dockerfile: Dockerfile
    secrets:
      - avote_ca.crt
      - source: avote2_key.pem
        target: certfile.pem
    environment:
      TALLIERS_INTERNAL: ${TALLIERS_INTERNAL}
    ports:
      - "18080:18080"
      - "8080:8080"

  avote3:
    command: ["3"]
    depends_on:
      db:
        condition: service_healthy
    build: src/tallier
    environment:
      TALLIERS_INTERNAL: "${TALLIERS_INTERNAL}"
    secrets:
      - avote_ca.crt
      - source: avote3_key.pem
        target: certfile.pem
    ports:
      - "18080:18080"
      - "8080:8080"

  webserver:
    image: avote_webserver
    build: src/webserver
    env_file:
      - .env
    environment:
      TALLIERS_EXTERNAL: "${TALLIERS_EXTERNAL}"
    ports:
      - 80:5000
  
  mailserver:
    image: namshi/smtp
    restart: always


secrets:
  avote_ca.crt:
    file: ./keys/avote_ca.crt
  avote1_key.pem:
    file: ./keys/avote1.pem
  avote2_key.pem:
    file: ./keys/avote2.pem
  avote3_key.pem:
    file: ./keys/avote3.pem
